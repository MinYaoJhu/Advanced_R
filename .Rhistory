make.names("  R")
make.names("if")
x <- c(1, 2, 3)
y <- x
y[[3]] <- 4
x
str(y)
y
y[[2]]
y[c(1,3)]
knitr::include_graphics("diagrams/name-value/binding-3.png")
tracemem(y)
y[[3]] <- 5L
untracemem(x)
f <- function(a) {
a
}
x <- c(1, 2, 3)
cat(tracemem(x), "\n")
z <- f(x)
# there's no copy here!
untracemem(x)
f <- function(a) {
a+1
}
x <- c(1, 2, 3)
cat(tracemem(x), "\n")
z <- f(x)
# there's no copy here!
untracemem(x)
knitr::include_graphics("diagrams/name-value/binding-f1.png")
knitr::include_graphics("diagrams/name-value/binding-f2.png")
l1 <- list(1, 2, 3)
knitr::include_graphics("diagrams/name-value/list.png")
l2 <- l1
knitr::include_graphics("diagrams/name-value/l-modify-1.png")
l2[[3]] <- 4
knitr::include_graphics("diagrams/name-value/l-modify-2.png")
ref(l1, l2)
d1 <- data.frame(x = c(1, 5, 6), y = c(2, 4, 3))
knitr::include_graphics("diagrams/name-value/dataframe.png")
d2 <- d1
d2[, 2] <- d2[, 2] * 2
knitr::include_graphics("diagrams/name-value/d-modify-c.png")
d3 <- d1
d3[1, ] <- d3[1, ] * 3
knitr::include_graphics("diagrams/name-value/d-modify-r.png")
x <- c("a", "a", "abc", "d")
knitr::include_graphics("diagrams/name-value/character.png")
knitr::include_graphics("diagrams/name-value/character-2.png")
ref(x, character = TRUE)
tracemem(1:10)
tracemem(1:10)
x <- c(1L, 2L, 3L)
tracemem(x)
str(x)
x[[3]] <- 4
str(x)
x <- c(1L, 2L, 3L)
tracemem(x)
str(x)
x[[3]] <- 4L
str(x)
x <- c(1, 2, 3)
tracemem(x)
str(x)
x[[3]] <- 4
str(x)
x <- c(1, 2, 3)
tracemem(x)
str(x)
x[[3]] <- 4L
str(x)
a <- 1:10
b <- list(a, a)
c <- list(b, a, 1:10)
ref(a, b, c)
knitr::include_graphics("diagrams/name-value/R_advance_2.3.6_Q3.png")
ref(c)
x <- list(1:10)
tracemem(x)
obj_addr(x)
obj_addrs(x)
ref(x)
x[[2]] <- x
x
str(x)
obj_addr(x)
obj_addrs(x)
untracemem(x)
ref(x)
knitr::include_graphics("diagrams/name-value/R_advance_2.3.6_Q4.png")
obj_size(letters)
obj_size(ggplot2::diamonds)
x <- runif(1e6)
obj_size(x)
y <- list(x, x, x)
obj_size(y)
obj_size(list(NULL, NULL, NULL))
banana <- "bananas bananas bananas"
obj_size(banana)
obj_size(rep(banana, 100))
obj_size(x, y)
obj_size(1:3)
obj_size(1:1e3)
obj_size(1:1e6)
obj_size(1:1e9)
y <- rep(list(runif(1e4)), 100)
object.size(y)
obj_size(y)
funs <- list(mean, sd, var)
obj_size(funs)
obj_size(list(mean, sd, var))
obj_size(mean)
obj_size(sd)
obj_size(var)
obj_size(mean)+obj_size(sd)+obj_size(var)
obj_size(mean)+obj_size(sqrt)+obj_size(var)
a <- runif(1e6)
obj_size(a)
b <- list(a, a)
obj_size(b)
obj_size(a, b)
str(b)
b[[1]][[1]] <- 10
str(b)
obj_size(b)
obj_size(a, b)
str(b)
b[[2]][[1]] <- 10
str(b)
obj_size(b)
obj_size(a)
obj_size(b)
obj_size(a, b)
v <- c(1, 2, 3)
tracemem(v)
knitr::include_graphics("diagrams/name-value/v-inplace-1.png")
v[[3]] <- 4
knitr::include_graphics("diagrams/name-value/v-inplace-2.png")
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
str(x)
medians <- vapply(x, median, numeric(1))
str(medians)
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
medians <- vapply(x, median, numeric(1))
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
for (i in 1:5) {
y[[i]] <- y[[i]] - medians[[i]]
}
#> tracemem[0x7f80c5c3de20 -> 0x7f80c48de210]:
e1 <- rlang::env(a = 1, b = 2, c = 3)
e2 <- e1
knitr::include_graphics("diagrams/name-value/e-modify-1.png")
e1$c <- 4
e2$c
knitr::include_graphics("diagrams/name-value/e-modify-2.png")
e <- rlang::env()
e$self <- e
ref(e)
knitr::include_graphics("diagrams/name-value/e-self.png")
x <- list()
tracemem(x)
x[[1]] <- x
untracemem(x)
ref(x)
nc = 100
x <- data.frame(matrix(runif(nc * 1e4), ncol = nc))
medians <- vapply(x, median, numeric(1))
normalization_slow <- function(x, medians) {
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
x
}
normalization_fast <- function(x, medians) {
y <- as.list(x)
for (i in seq_along(medians)) {
y[[i]] <- y[[i]] - medians[[i]]
}
list2DF(y)
}
library(bench)
bench::mark(normalization_slow(x, medians))
bench::mark(normalization_fast(x, medians))
create_random_df <- function(nrow, ncol) {
random_matrix <- matrix(runif(nrow * ncol), nrow = nrow)
as.data.frame(random_matrix)
}
create_random_df(2, 2)
benchmark_medians <- function(ncol) {
df <- create_random_df(nrow = 1e4, ncol = ncol)
medians <- vapply(df, median, numeric(1), USE.NAMES = FALSE)
bench::mark(
"data frame" = normalization_slow(df, medians),
"list" = normalization_fast(df, medians),
time_unit = "ms"
)
}
benchmark_medians(1000)
results <- bench::press(
ncol = c(1, 10, 50, 100, 250, 300, 400, 500, 750, 1000),
benchmark_medians(ncol)
)
library(ggplot2)
ggplot(
results,
aes(ncol, median, col = attr(expression, "description"))
) +
geom_point(size = 2) +
geom_smooth() +
labs(
x = "Number of Columns",
y = "Execution Time (ms)",
colour = "Data Structure"
) +
theme(legend.position = "top")
# tracemem(e1)
# Error in tracemem(e1) :
#  'tracemem' is not useful for promise and environment objects
x <- 1:3
knitr::include_graphics("diagrams/name-value/unbinding-1.png")
x <- 2:4
knitr::include_graphics("diagrams/name-value/unbinding-2.png")
rm(x)
knitr::include_graphics("diagrams/name-value/unbinding-3.png")
gc()
mem_used()
df <- data.frame(runif(3), runif(3))
names(df) <- c(1, 2)
df$`3` <- df$`1` + df$`2`
x <- runif(1e6)
y <- list(x, x, x)
obj_size(y)
df <- data.frame(runif(3), runif(3))
names(df) <- c(1, 2)
df$"3" <- df$"1" + df$"2"
str(df)
df$`3` <- df$`1` + df$`2`
str(df)
x <- runif(1e6)
y <- list(x, x, x)
lobstr::obj_size(y)
a <- c(1, 5, 3, 2)
b <- a
b[[1]] <- 10
library(lobstr)
x <- c(1, 2, 3)
knitr::include_graphics("diagrams/name-value/binding-1.png")
y <- x
knitr::include_graphics("diagrams/name-value/binding-2.png")
obj_addr(x)
obj_addr(y)
`_abc` <- 1
`_abc`
`if` <- 10
`if`
a <- 1:10
b <- a
c <- b
d <- 1:10
obj_addr(a)
obj_addr(b)
obj_addr(c)
obj_addr(d)
obj_addr(mean)
obj_addr(base::mean)
obj_addr(get("mean"))
obj_addr(evalq(mean))
obj_addr(match.fun("mean"))
make.names("")
make.names(".1")
make.names("non-valid")
make.names("@")
make.names("  R")
make.names("if")
x <- c(1, 2, 3)
y <- x
y[[3]] <- 4
x
str(y)
y
y[[2]]
y[c(1,3)]
knitr::include_graphics("diagrams/name-value/binding-3.png")
tracemem(y)
y[[3]] <- 5L
untracemem(x)
f <- function(a) {
a
}
x <- c(1, 2, 3)
cat(tracemem(x), "\n")
z <- f(x)
# there's no copy here!
untracemem(x)
f <- function(a) {
a+1
}
x <- c(1, 2, 3)
cat(tracemem(x), "\n")
z <- f(x)
# there's no copy here!
untracemem(x)
knitr::include_graphics("diagrams/name-value/binding-f1.png")
knitr::include_graphics("diagrams/name-value/binding-f2.png")
l1 <- list(1, 2, 3)
knitr::include_graphics("diagrams/name-value/list.png")
l2 <- l1
knitr::include_graphics("diagrams/name-value/l-modify-1.png")
l2[[3]] <- 4
knitr::include_graphics("diagrams/name-value/l-modify-2.png")
ref(l1, l2)
d1 <- data.frame(x = c(1, 5, 6), y = c(2, 4, 3))
knitr::include_graphics("diagrams/name-value/dataframe.png")
d2 <- d1
d2[, 2] <- d2[, 2] * 2
knitr::include_graphics("diagrams/name-value/d-modify-c.png")
d3 <- d1
d3[1, ] <- d3[1, ] * 3
knitr::include_graphics("diagrams/name-value/d-modify-r.png")
x <- c("a", "a", "abc", "d")
knitr::include_graphics("diagrams/name-value/character.png")
knitr::include_graphics("diagrams/name-value/character-2.png")
ref(x, character = TRUE)
tracemem(1:10)
tracemem(1:10)
x <- c(1L, 2L, 3L)
tracemem(x)
str(x)
x[[3]] <- 4
str(x)
x <- c(1L, 2L, 3L)
tracemem(x)
str(x)
x[[3]] <- 4L
str(x)
x <- c(1, 2, 3)
tracemem(x)
str(x)
x[[3]] <- 4
str(x)
x <- c(1, 2, 3)
tracemem(x)
str(x)
x[[3]] <- 4L
str(x)
a <- 1:10
b <- list(a, a)
c <- list(b, a, 1:10)
ref(a, b, c)
knitr::include_graphics("diagrams/name-value/R_advance_2.3.6_Q3.png")
ref(c)
x <- list(1:10)
tracemem(x)
obj_addr(x)
obj_addrs(x)
ref(x)
x[[2]] <- x
x
str(x)
obj_addr(x)
obj_addrs(x)
untracemem(x)
ref(x)
knitr::include_graphics("diagrams/name-value/R_advance_2.3.6_Q4.png")
obj_size(letters)
obj_size(ggplot2::diamonds)
x <- runif(1e6)
obj_size(x)
y <- list(x, x, x)
obj_size(y)
obj_size(list(NULL, NULL, NULL))
banana <- "bananas bananas bananas"
obj_size(banana)
obj_size(rep(banana, 100))
obj_size(x, y)
obj_size(1:3)
obj_size(1:1e3)
obj_size(1:1e6)
obj_size(1:1e9)
y <- rep(list(runif(1e4)), 100)
object.size(y)
obj_size(y)
funs <- list(mean, sd, var)
obj_size(funs)
obj_size(list(mean, sd, var))
obj_size(mean)
obj_size(sd)
obj_size(var)
obj_size(mean)+obj_size(sd)+obj_size(var)
obj_size(mean)+obj_size(sqrt)+obj_size(var)
a <- runif(1e6)
obj_size(a)
b <- list(a, a)
obj_size(b)
obj_size(a, b)
str(b)
b[[1]][[1]] <- 10
str(b)
obj_size(b)
obj_size(a, b)
str(b)
b[[2]][[1]] <- 10
str(b)
obj_size(b)
obj_size(a)
obj_size(b)
obj_size(a, b)
v <- c(1, 2, 3)
tracemem(v)
knitr::include_graphics("diagrams/name-value/v-inplace-1.png")
v[[3]] <- 4
knitr::include_graphics("diagrams/name-value/v-inplace-2.png")
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
str(x)
medians <- vapply(x, median, numeric(1))
str(medians)
x <- data.frame(matrix(runif(5 * 1e4), ncol = 5))
medians <- vapply(x, median, numeric(1))
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
for (i in 1:5) {
y[[i]] <- y[[i]] - medians[[i]]
}
#> tracemem[0x7f80c5c3de20 -> 0x7f80c48de210]:
e1 <- rlang::env(a = 1, b = 2, c = 3)
e2 <- e1
knitr::include_graphics("diagrams/name-value/e-modify-1.png")
e1$c <- 4
e2$c
knitr::include_graphics("diagrams/name-value/e-modify-2.png")
e <- rlang::env()
e$self <- e
ref(e)
knitr::include_graphics("diagrams/name-value/e-self.png")
x <- list()
tracemem(x)
x[[1]] <- x
untracemem(x)
ref(x)
nc = 100
x <- data.frame(matrix(runif(nc * 1e4), ncol = nc))
medians <- vapply(x, median, numeric(1))
normalization_slow <- function(x, medians) {
for (i in seq_along(medians)) {
x[[i]] <- x[[i]] - medians[[i]]
}
x
}
normalization_fast <- function(x, medians) {
y <- as.list(x)
for (i in seq_along(medians)) {
y[[i]] <- y[[i]] - medians[[i]]
}
list2DF(y)
}
library(bench)
bench::mark(normalization_slow(x, medians))
bench::mark(normalization_fast(x, medians))
create_random_df <- function(nrow, ncol) {
random_matrix <- matrix(runif(nrow * ncol), nrow = nrow)
as.data.frame(random_matrix)
}
create_random_df(2, 2)
benchmark_medians <- function(ncol) {
df <- create_random_df(nrow = 1e4, ncol = ncol)
medians <- vapply(df, median, numeric(1), USE.NAMES = FALSE)
bench::mark(
"data frame" = normalization_slow(df, medians),
"list" = normalization_fast(df, medians),
time_unit = "ms"
)
}
benchmark_medians(1000)
results <- bench::press(
ncol = c(1, 10, 50, 100, 250, 300, 400, 500, 750, 1000),
benchmark_medians(ncol)
)
library(ggplot2)
ggplot(
results,
aes(ncol, median, col = attr(expression, "description"))
) +
geom_point(size = 2) +
geom_smooth() +
labs(
x = "Number of Columns",
y = "Execution Time (ms)",
colour = "Data Structure"
) +
theme(legend.position = "top")
# tracemem(e1)
# Error in tracemem(e1) :
#  'tracemem' is not useful for promise and environment objects
x <- 1:3
knitr::include_graphics("diagrams/name-value/unbinding-1.png")
x <- 2:4
knitr::include_graphics("diagrams/name-value/unbinding-2.png")
rm(x)
knitr::include_graphics("diagrams/name-value/unbinding-3.png")
gc()
mem_used()
df <- data.frame(runif(3), runif(3))
names(df) <- c(1, 2)
df$`3` <- df$`1` + df$`2`
x <- runif(1e6)
y <- list(x, x, x)
obj_size(y)
