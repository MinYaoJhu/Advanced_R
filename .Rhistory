source("https://bioconductor.org/biocLite.R")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.14")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rsubread")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("limma")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("edgeR")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("Rsamtools")
install.packages(c("cli", "cluster", "magrittr", "mgcv", "rlang", "vctrs", "xfun", "yaml"))
install.packages(c("cli", "cluster", "magrittr", "mgcv", "rlang", "vctrs", "xfun", "yaml"))
sessionInfo()
install.packages("rJava")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EBImage")
install.packages("remotes")
remotes::install_github("aoles/RBioFormats")
install.packages("C:/Users/myj23/Downloads/CSCimages-main.zip", repos = NULL, type = "win.binary")
install.packages(c("cli", "htmltools", "MASS", "rlang", "stringi", "xfun"))
install.packages(c("cli", "htmltools", "MASS", "rlang", "stringi", "xfun"))
install.packages("installr")
library(installr)
updateR()
q()
sessionInfo()
install.packages("rJava")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("EBImage")
install.packages("remotes")
remotes::install_github("aoles/RBioFormats")
install.packages("C:/Users/myj23/Downloads/CSCimages-main.zip", repos = NULL, type = "win.binary")
install.packages("C:/Users/myj23/Downloads/CSCimages-main.zip", repos = NULL, type = "win.binary")
install.packages("magrittr")
install.packages("purrr")
install.packages("stringr")
install.packages("plyr")
install.packages("dplyr")
install.packages("ggplot2")
install.packages("C:/Users/myj23/Downloads/CSCimages-main.zip", repos = NULL, type = "win.binary")
install.packages(c("evaluate", "nlme", "pillar", "rmarkdown", "scales", "survival", "tinytex", "xfun"))
setwd("D:/Oldroyd_lab/GitHub/Advanced_R")
library(lobstr)
df <- data.frame(runif(3), runif(3))
names(df) <- c(1, 2)
df
df$1
df$"1"
df$"1" + df$"2"
df$"1"
df$"2"
df$"1" + df$"2"
df$"3" <- df$"1" + df$"2"
df
x <- runif(1e6)
y <- list(x, x, x)
View(y)
a <- c(1, 5, 3, 2)
b <- a
b[[1]] <- 10
library(lobstr)
grade <- function(x) {
if (x > 90) {
"A"
} else if (x > 80) {
"B"
} else if (x > 50) {
"C"
} else {
"F"
}
}
x1 <- if (TRUE) 1 else 2
x2 <- if (FALSE) 1 else 2
c(x1, x2)
greet <- function(name, birthday = FALSE) {
paste0(
"Hi ", name,
if (birthday) " and HAPPY BIRTHDAY"
)
}
greet("Maria", FALSE)
greet("Jaime", TRUE)
if ("x") 1
if (logical()) 1
if (NA) 1
Sys.setenv("_R_CHECK_LENGTH_1_CONDITION_" = "false")
if (c(TRUE, FALSE)) 1
